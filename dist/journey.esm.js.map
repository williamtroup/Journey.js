{"version":3,"sources":["../src/ts/enum.ts","../src/journey.ts"],"names":["result"],"mappings":"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","sourcesContent":["export const enum Char {\n    empty = \"\",\n    space = \" \",\n}","/**\n * Journey.js\n * \n * A lightweight, easy-to-use JavaScript library to create interactive, customizable, accessible guided tours across your websites or web apps!\n * \n * @file        journey.js\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport {\n    type Configuration,\n    type BindingOptions,\n    type Events } from \"./ts/type\";\n\nimport { Char } from \"./ts/enum\";\n\n\ntype StringToJson = {\n    parsed: boolean;\n    object: any;\n};\n\n\n( () => {\n    // Variables: Configuration\n    let _configuration: Configuration = {} as Configuration;\n\n    // Variables: Groups\n    const _groups_Default: string = \"default\";\n    let _groups_Current: string = _groups_Default;\n    const _groups: object = {};\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Triggering Custom Events\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function fireCustomTriggerEvent( triggerFunction: Function, ...args : any[] ) : void {\n        if ( isDefinedFunction( triggerFunction ) ) {\n            triggerFunction.apply( null, [].slice.call( args, 0 ) );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Browser URL Parameters\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getBrowserUrlParameters() : boolean {\n        let show: boolean = false;\n\n        if ( _configuration.browserUrlParametersEnabled ) {\n            const url: string = window.location.href;\n            const urlArguments: any = getBrowserUrlArguments( url );\n\n            if ( isDefined( urlArguments.sjOrderId ) ) {\n                const orderId: number = parseInt( urlArguments.sjOrderId, 10 );\n\n                if ( !isNaN( orderId ) && orderId <= _groups[ _groups_Current ].keys.length - 1 ) {\n                    _groups[ _groups_Current ].position = orderId;\n                }\n            }\n\n            if ( isDefined( urlArguments.sjShow ) ) {\n                show = urlArguments.sjShow === \"true\";\n            }\n        }\n\n        return show;\n    }\n\n    function getBrowserUrlArguments( url: string ) : any {\n        const urlArguments: object = {};\n        const urlDataParts: string[] = url.split( \"?\" );\n\n        if ( urlDataParts.length > 1 ) {\n            const parsedArgs: string[] = urlDataParts[ 1 ].split( \"&\" );\n            const parsedArgsLength: number = parsedArgs.length;\n\n            for ( var parsedArgsIndex = 0; parsedArgsIndex < parsedArgsLength; parsedArgsIndex++ ) {\n                const parsedArg: string[] = parsedArgs[ parsedArgsIndex ].split( \"=\" );\n\n                urlArguments[ parsedArg[ 0 ] ] = parsedArg[ 1 ];\n            }\n        }\n\n        return urlArguments;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Validation\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function isDefined( value: any ) : boolean {\n        return value !== null && value !== undefined && value !== Char.empty;\n    }\n\n    function isDefinedObject( object: any ) : boolean {\n        return isDefined( object ) && typeof object === \"object\";\n    }\n\n    function isDefinedBoolean( object: any ) : boolean {\n        return isDefined( object ) && typeof object === \"boolean\";\n    }\n\n    function isDefinedString( object: any ) : boolean {\n        return isDefined( object ) && typeof object === \"string\";\n    }\n\n    function isDefinedFunction( object: any ) : boolean {\n        return isDefined( object ) && typeof object === \"function\";\n    }\n\n    function isDefinedNumber( object: any ) : boolean {\n        return isDefined( object ) && typeof object === \"number\";\n    }\n\n    function isDefinedArray( object: any ) : boolean {\n        return isDefinedObject( object ) && object instanceof Array;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Default Parameter/Option Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getDefaultAnyString( value: any, defaultValue: string ) : string {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    function getDefaultString( value: any, defaultValue: string ) : string {\n        return isDefinedString( value ) ? value : defaultValue;\n    }\n\n    function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return isDefinedBoolean( value ) ? value : defaultValue;\n    }\n\n    function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return isDefinedNumber( value ) ? value : defaultValue;\n    }\n\n    function getDefaultFunction( value: any, defaultValue: object ) : any {\n        return isDefinedFunction( value ) ? value : defaultValue;\n    }\n\n    function getDefaultObject( value: any, defaultValue: object ) : object {\n        return isDefinedObject( value ) ? value : defaultValue;\n    }\n\n    function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return isDefinedArray( value ) ? value : defaultValue;\n    }\n\n    function getDefaultStringOrArray( value: any, defaultValue: any[] ) : any[] {\n        let result: any[] = defaultValue;\n\n        if ( isDefinedString( value ) ) {\n            const values: string[] = value.toString().split( Char.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n\n    function getObjectFromString( objectString: any ) : StringToJson {\n        const result: StringToJson = {\n            parsed: true,\n            object: null\n        } as StringToJson;\n\n        try {\n            if ( isDefinedString( objectString ) ) {\n                result.object = JSON.parse( objectString );\n            }\n\n        } catch ( e1 ) {\n            try {\n                result.object = eval( \"(\" + objectString + \")\" );\n\n                if ( isDefinedFunction( result.object ) ) {\n                    result.object = result.object();\n                }\n                \n            } catch ( e2 ) {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.objectErrorText.replace( \"{{error_1}}\",  e1.message ).replace( \"{{error_2}}\",  e2.message ) );\n                    result.parsed = false;\n                }\n                \n                result.object = null;\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Initialize Journey.js\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    ( () => {\n    } ) ();\n} );"]}